name: SonarQube Test
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - sonarqube
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup dotnet core 3.1.101 if needed
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
        if: matrix.os == 'macOS-latest' || matrix.os == 'ubuntu-latest'
      - name: SonarScanner for .NET 5 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@2.0
        with:
          # The key of the SonarQube project
          sonarProjectKey: ejcoyle88_KnowYourLimits
          # The name of the SonarQube project
          sonarProjectName:  KnowYourLimits
          # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
          sonarOrganization: ejcoyle88
          # Optional command arguments to dotnet test
          dotnetTestArguments: --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          # Optional extra command arguments the the SonarScanner 'begin' command
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"

env:
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
